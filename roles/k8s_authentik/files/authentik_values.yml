## Globally shared configuration for authentik components.
global:
  # Number of old deployment ReplicaSets to retain. The rest will be garbage collected.
  revisionHistoryLimit: 1

  # -- Environment variables to pass to all deployed Deployments. Does not apply to GeoIP
  # See configuration options at https://goauthentik.io/docs/installation/configuration/
  # @default -- `[]` (See [values.yaml])
  env:
    - name: AUTHENTIK_BOOTSTRAP_EMAIL
      valueFrom:
        secretKeyRef:
          name: authentik-admin-secret
          key: email
    - name: AUTHENTIK_BOOTSTRAP_PASSWORD
      valueFrom:
        secretKeyRef:
          name: authentik-admin-secret
          key: password
    - name: AUTHENTIK_BOOTSTRAP_TOKEN
      valueFrom:
        secretKeyRef:
          name: authentik-admin-secret
          key: token

authentik:
  # -- Log level for server and worker
  log_level: info
  # -- Secret key used for cookie singing and unique user IDs,
  # don't change this after the first install
  secret_key: "/Y6M/p+3sw9ip7+oCbnaH2mjF8DM/q9crfp2ptonjlJUWCKR"
  # This sends anonymous usage-data, stack traces on errors and
  # performance data to authentik.error-reporting.a7k.io, and is fully opt-in
  error_reporting:
    enabled: false
  email:
    # -- SMTP Server emails are sent from, fully optional
    host: ""
    # -- SMTP server port
    port: 587
    # -- SMTP credentials, when left empty, no authentication will be done
    username: ""
    # -- SMTP credentials, when left empty, no authentication will be done
    password: ""
    # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
    use_tls: false
    # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
    use_ssl: false
    # -- Connection timeout
    timeout: 30
    # -- Email from address, can either be in the format "foo@bar.baz" or "authentik <foo@bar.baz>"
    from: ""
  postgresql:
    password: "authentik"

## authentik server
server:
  ingress:
    enabled: true
    ingressClassName: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    #hosts: -> template
  # -- Resource limits and requests for the authentik server
  resources:
    requests:
      cpu: 300m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 512Mi

## authentik worker
worker:
  # -- Resource limits and requests for the authentik worker
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
    limits:
      cpu: 200m
      memory: 512Mi

geoip:
  # -- enable GeoIP sidecars for the authentik server and worker pods
  enabled: false

  # -- Resource limits and requests for GeoIP containers
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi

postgresql:
  # -- enable the Bitnami PostgreSQL chart. Refer to https://github.com/bitnami/charts/blob/main/bitnami/postgresql/ for possible values.
  enabled: true
  ## Bitnami PostgreSQL image version
  ## ref: https://hub.docker.com/r/bitnami/postgresql/tags/
  ## @param image.registry PostgreSQL image registry
  ## @param image.repository PostgreSQL image repository
  ## @param image.tag PostgreSQL image tag (immutable tags are recommended)
  ## @param image.digest PostgreSQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy PostgreSQL image pull policy
  ## @param image.pullSecrets Specify image pull secrets
  ## @param image.debug Specify if debug values should be set
  ##
  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 15-debian-11
  auth:
    ## @param auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` is provided
    ##
    postgresPassword: "authentik"
    ## @param auth.username Name for a custom user to create
    ##
    username: "authentik"
    ## @param auth.password Password for the custom user to create. Ignored if `auth.existingSecret` is provided
    ##
    password: "authentik"
    ## @param auth.database Name for a custom database to create
    ##
    database: "authentik"
  primary:
    ## PostgreSQL Primary resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param primary.resources.limits The resources limits for the PostgreSQL Primary containers
    ## @param primary.resources.requests.memory The requested memory for the PostgreSQL Primary containers
    ## @param primary.resources.requests.cpu The requested cpu for the PostgreSQL Primary containers
    ##
    resources:
      limits:
        memory: 256Mi
        cpu: 250m
      requests:
        memory: 256Mi
        cpu: 250m
    persistence:
      enabled: true
      storageClass: "-"
      existingClaim: "pvc-authentik-postgresql-primary"
      accessModes:
        - ReadWriteOnce
    ## @param primary.pgHbaConfiguration PostgreSQL Primary client authentication configuration
    ## ref: https://www.postgresql.org/docs/current/static/auth-pg-hba-conf.html
    ## e.g:#
    ## pgHbaConfiguration: |-
    ##   local all all trust
    ##

  ## @section Metrics Parameters
  ##

  metrics:
    ## @param metrics.enabled Start a prometheus exporter
    ##
    enabled: true

redis:
  ## -- enable the Bitnami Redis chart. Refer to https://github.com/bitnami/charts/blob/main/bitnami/redis/ for possible values.
  enabled: true
  global:
    storageClass: "nfs-client-ssd-0"
  ## Bitnami Redis&reg; image
  ## ref: https://hub.docker.com/r/bitnami/redis/tags/
  ## @param image.registry [default: REGISTRY_NAME] Redis&reg; image registry
  ## @param image.repository [default: REPOSITORY_NAME/redis] Redis&reg; image repository
  ## @skip image.tag Redis&reg; image tag (immutable tags are recommended)
  ## @param image.digest Redis&reg; image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param image.pullPolicy Redis&reg; image pull policy
  ## @param image.pullSecrets Redis&reg; image pull secrets
  ## @param image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 7.2-debian-11
  master:
    ## Redis&reg; master resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param master.resources.limits The resources limits for the Redis&reg; master containers
    ## @param master.resources.requests The requested resources for the Redis&reg; master containers
    ##
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 128Mi
