ingress:
  enabled: true
  ingressClassName: "nginx"
  annotations: 
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  labels: {}
  hosts:
    - host: authentik.hitesh.com
      paths:
        - path: "/"
          pathType: Prefix
  tls: []

authentik:
  # -- Log level for server and worker
  log_level: info
  # -- Secret key used for cookie singing and unique user IDs,
  # don't change this after the first install
  secret_key: "/Y6M/p+3sw9ip7+oCbnaH2mjF8DM/q9crfp2ptonjlJUWCKR"
  email:
    # -- SMTP Server emails are sent from, fully optional
    host: ""
    port: 587
    # -- SMTP credentials, when left empty, not authentication will be done
    username: ""
    # -- SMTP credentials, when left empty, not authentication will be done
    password: ""
    # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
    use_tls: false
    # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
    use_ssl: false
    # -- Connection timeout
    timeout: 30
    # -- Email from address, can either be in the format "foo@bar.baz" or "authentik <foo@bar.baz>"
    from: ""
  postgresql:
    # -- set the postgresql hostname to talk to
    # if unset and .Values.postgresql.enabled == true, will generate the default
    # @default -- `{{ .Release.Name }}-postgresql`
    host: "{{ .Release.Name }}-postgresql"
    # -- postgresql Database name
    # @default -- `authentik`
    name: "authentik"
    # -- postgresql Username
    # @default -- `authentik`
    user: "authentik"
    password: "authentik"
    port: 5432

# -- see configuration options at https://goauthentik.io/docs/installation/configuration/
env: {}
  # AUTHENTIK_BOOTSTRAP_EMAIL: a@b.com

envValueFrom: 
  AUTHENTIK_BOOTSTRAP_EMAIL:
    secretKeyRef:
      key: email
      name: authentik-admin-secret
  AUTHENTIK_BOOTSTRAP_PASSWORD:
    secretKeyRef:
      key: password
      name: authentik-admin-secret
  AUTHENTIK_BOOTSTRAP_TOKEN:
    secretKeyRef:
      key: token
      name: authentik-admin-secret

resources:
  server: {}
  worker: {}

postgresql:
  # -- enable the bundled bitnami postgresql chart
  enabled: true
  postgresqlPostgresPassword: "gW4sz8heGn"
  # postgresqlPostgresPassword: "authentik"
  postgresqlUsername: "authentik"
  postgresqlPassword: "authentik"
  postgresqlDatabase: "authentik"
  persistence:
    enabled: true
    storageClass: "-"
    existingClaim: "pvc-authentik-postgresql-primary"
    accessModes:
      - ReadWriteOnce

redis:
  # -- enable the bundled bitnami redis chart
  enabled: true
  global:
    storageClass: "nfs-client-ssd-0"
