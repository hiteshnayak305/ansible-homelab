## Globally shared configuration for authentik components.
global:
  # -- Environment variables to pass to all deployed Deployments. Does not apply to GeoIP
  # See configuration options at https://goauthentik.io/docs/installation/configuration/
  # @default -- `[]` (See [values.yaml])
  env:
    - name: AUTHENTIK_BOOTSTRAP_EMAIL
      valueFrom:
        secretKeyRef:
          name: authentik-admin-secret
          key: email
    - name: AUTHENTIK_BOOTSTRAP_PASSWORD
      valueFrom:
        secretKeyRef:
          name: authentik-admin-secret
          key: password
    - name: AUTHENTIK_BOOTSTRAP_TOKEN
      valueFrom:
        secretKeyRef:
          name: authentik-admin-secret
          key: token

authentik:
  # -- Log level for server and worker
  log_level: info
  # -- Secret key used for cookie singing and unique user IDs,
  # don't change this after the first install
  secret_key: "/Y6M/p+3sw9ip7+oCbnaH2mjF8DM/q9crfp2ptonjlJUWCKR"
  # This sends anonymous usage-data, stack traces on errors and
  # performance data to authentik.error-reporting.a7k.io, and is fully opt-in
  error_reporting:
    enabled: false
  email:
    # -- SMTP Server emails are sent from, fully optional
    host: ""
    # -- SMTP server port
    port: 587
    # -- SMTP credentials, when left empty, no authentication will be done
    username: ""
    # -- SMTP credentials, when left empty, no authentication will be done
    password: ""
    # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
    use_tls: false
    # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
    use_ssl: false
    # -- Connection timeout
    timeout: 30
    # -- Email from address, can either be in the format "foo@bar.baz" or "authentik <foo@bar.baz>"
    from: ""
  postgresql:
    password: "authentik"

## authentik server
server:
  ingress:
    enabled: true
    ingressClassName: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - authentik.hitesh.com

postgresql:
  # -- enable the Bitnami PostgreSQL chart. Refer to https://github.com/bitnami/charts/blob/main/bitnami/postgresql/ for possible values.
  enabled: true
  auth:
    ## @param auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` is provided
    ##
    postgresPassword: "authentik"
    ## @param auth.username Name for a custom user to create
    ##
    username: "authentik"
    ## @param auth.password Password for the custom user to create. Ignored if `auth.existingSecret` is provided
    ##
    password: "authentik"
    ## @param auth.database Name for a custom database to create
    ##
    database: "authentik"
  primary:
    persistence:
      enabled: true
      storageClass: "-"
      existingClaim: "pvc-authentik-postgresql-primary"
      accessModes:
        - ReadWriteOnce
    ## @param primary.pgHbaConfiguration PostgreSQL Primary client authentication configuration
    ## ref: https://www.postgresql.org/docs/current/static/auth-pg-hba-conf.html
    ## e.g:#
    ## pgHbaConfiguration: |-
    ##   local all all trust
    ##

redis:
  ## -- enable the Bitnami Redis chart. Refer to https://github.com/bitnami/charts/blob/main/bitnami/redis/ for possible values.
  enabled: true
  global:
    storageClass: "nfs-client-ssd-0"
