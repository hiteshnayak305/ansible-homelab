ingress:
  annotations:
    cert-manager.io/cluster-issuer: ca-cluster-issuer
    cert-manager.io/common-name: "grafana.{{ kubernetes_ingress_root_domain }}"
    cert-manager.io/email-sans: hiteshnayak305@gmail.com
    cert-manager.io/subject-organizations: DEV
    cert-manager.io/subject-organizationalunits: DEV
    cert-manager.io/subject-countries: IN
    cert-manager.io/subject-localities: PUNE
    cert-manager.io/subject-streetaddresses: MH
    cert-manager.io/usages: server auth,client auth
    cert-manager.io/private-key-algorithm: RSA
    cert-manager.io/private-key-size: "4096"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - grafana.{{ kubernetes_ingress_root_domain }}
  tls:
    - secretName: grafana-tls
      hosts:
        - "grafana.{{ kubernetes_ingress_root_domain }}"

## Grafana's primary configuration
## NOTE: values in map will be converted to ini format
## ref: http://docs.grafana.org/installation/configuration/
##
grafana.ini:
  auth.generic_oauth:
    enabled: true
    name: Keycloak
    allow_sign_up: true
    skip_org_role_sync: false
    allow_assign_grafana_admin: true
    client_id: grafana
    client_secret: {{ grafana_oauth_client_secret }}
    use_refresh_token: true
    scopes: openid email profile offline_access roles groups
    email_attribute_path: email
    login_attribute_path: preferred_username
    name_attribute_path: name
    role_attribute_path: contains(resource_access.grafana.roles[*], 'grafanaadmin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'editor') && 'Editor' || 'Viewer'
    groups_attribute_path: groups
    auth_url: https://keycloak.{{ kubernetes_ingress_root_domain }}/realms/main/protocol/openid-connect/auth
    token_url: https://keycloak.{{ kubernetes_ingress_root_domain }}/realms/main/protocol/openid-connect/token
    api_url: https://keycloak.{{ kubernetes_ingress_root_domain }}/realms/main/protocol/openid-connect/userinfo
