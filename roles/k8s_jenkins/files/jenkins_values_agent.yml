agent:
  enabled: true
  image: "jenkins/inbound-agent"
  tag: "latest"
  workingDir: "/home/jenkins/agent"
  nodeUsageMode: "NORMAL"
  customJenkinsLabels: []
  componentName: "jenkins-agent"
  websocket: false
  directConnection: false
  privileged: false
  hostNetworking: false
  resources:
    requests:
      cpu: "150m"
      memory: "256Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"
  # You may want to change this to true while testing a new image
  alwaysPullImage: false
  # Controls how agent pods are retained after the Jenkins build completes
  # Possible values: Always, Never, OnFailure
  podRetention: "OnFailure"
  # Disable if you do not want the Yaml the agent pod template to show up
  # in the job Console Output. This can be helpful for either security reasons
  # or simply to clean up the output to make it easier to read.
  showRawYaml: true
  # You can define the volumes that you want to mount for this container
  # Allowed types are: ConfigMap, EmptyDir, HostPath, Nfs, PVC, Secret
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes
  volumes: 
    - type: HostPath
      hostPath: /etc/ssl/certs
      mountPath: /etc/ssl/certs
      readOnly: true
    - type: PVC
      claimName: pvc-jenkins-maven
      mountPath: /root/.m2
      readOnly: false

  # You can define the workspaceVolume that you want to mount for this container
  # Allowed types are: DynamicPVC, EmptyDir, HostPath, Nfs, PVC
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes/workspace
  workspaceVolume: 
    type: DynamicPVC
    storageClassName: nfs-client-hdd-0
    requestsSize: 1Gi
  #
  # Pod-wide environment, these vars are visible to any container in the agent pod
  envVars: []
  # - name: PATH
  #   value: /usr/local/bin
  # Mount a secret as environment variable
  secretEnvVars: []
  # - key: PATH
  #   optional: false # default: false
  #   secretKey: MY-K8S-PATH
  #   secretName: my-k8s-secret
  nodeSelector: {}
  # Key Value selectors. Ex:
  # jenkins-agent: v1

  # Executed command when side container gets started
  command:
  args: "${computer.jnlpmac} ${computer.name}"
  # Side container name
  sideContainerName: "jnlp"
  # Doesn't allocate pseudo TTY by default
  TTYEnabled: false
  # Max number of spawned agent
  containerCap: 5
  # Pod name
  podName: "default"
  # Allows the Pod to remain active for reuse until the configured number of
  # minutes has passed since the last step was executed on it.
  idleMinutes: 0
  # Defines how the raw yaml field gets merged with yaml definitions from inherited pod templates: merge or override
  yamlMergeStrategy: "merge"
  # Timeout in seconds for an agent to be online
  connectTimeout: 100
  # Annotations to apply to the pod.
  annotations: {}

  # Below is the implementation of custom pod templates for the default configured kubernetes cloud.
  # Add a key under podTemplates for each pod template. Each key (prior to | character) is just a label, and can be any value.
  # Keys are only used to give the pod template a meaningful name.  The only restriction is they may only contain RFC 1123 \ DNS label
  # characters: lowercase letters, numbers, and hyphens. Each pod template can contain multiple containers.
  # For this pod templates configuration to be loaded the following values must be set:
  # controller.JCasC.defaultConfig: true
  # Best reference is https://<jenkins_url>/configuration-as-code/reference#Cloud-kubernetes. The example below creates a python pod template.
  podTemplates: 
    kaniko: |
      - name: kaniko
        label: jenkins-kaniko
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: kaniko
            image: gcr.io/kaniko-project/executor:debug
            command: "/busybox/sh -c"
            args: "cat"
            runAsUser: 0
            ttyEnabled: true
            resourceRequestCpu: "200m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "250m"
            resourceLimitMemory: "512Mi"
        volumes:
          - secretVolume:
              mountPath: /kaniko/.docker/
              secretName: gitea-docker-credentials-secret
          - secretVolume:
              mountPath: /kaniko/ssl/certs/
              secretName: jenkins-custom-root-ca-cert
        yamlMergeStrategy: merge
    k8s: |
      - name: k8s
        label: jenkins-k8s
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: k8s
            image: alpine/k8s:1.28.2
            command: "/bin/bash -c"
            args: "cat"
            ttyEnabled: true
            resourceRequestCpu: "100m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "150m"
            resourceLimitMemory: "256Mi"
        volumes:
          - secretVolume:
              mountPath: /root/.kube/
              secretName: kube-credentials-secret
        yamlMergeStrategy: merge
    python: |
      - name: python
        label: jenkins-python
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: python
            image: python:3
            command: "/bin/sh -c"
            args: "cat"
            ttyEnabled: true
            resourceRequestCpu: "100m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "150m"
            resourceLimitMemory: "256Mi"
    jdk17: |
      - name: jdk17
        label: jenkins-jdk17
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: jdk17
            image: eclipse-temurin:17-jdk-alpine
            command: "/bin/sh -c"
            args: "cat"
            ttyEnabled: true
            resourceRequestCpu: "250m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "300m"
            resourceLimitMemory: "512Mi"