## volumes permissions :
# 4 -r; 2 - w; x 1
#
# Octal   Decimal   String
# 0777    511       ?rwxrwxrwx
# 0700    448       ?rwx------
# 0644    420       ?rw-r--r--
# 0400    256       ?r--------

agent:
  enabled: true
  image: jenkins/inbound-agent
  tag: latest-alpine
  workingDir: "/home/jenkins/agent"
  nodeUsageMode: "NORMAL"
  customJenkinsLabels: []
  componentName: "jenkins-agent"
  websocket: false
  directConnection: false
  privileged: true
  runAsUser: 0
  hostNetworking: false
  resources:
    requests:
      cpu: "300m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "500Mi"
  # You may want to change this to true while testing a new image
  alwaysPullImage: false
  # Controls how agent pods are retained after the Jenkins build completes
  # Possible values: Always, Never, OnFailure
  podRetention: "OnFailure"
  # Disable if you do not want the Yaml the agent pod template to show up
  # in the job Console Output. This can be helpful for either security reasons
  # or simply to clean up the output to make it easier to read.
  showRawYaml: true
  # You can define the volumes that you want to mount for this container
  # Allowed types are: ConfigMap, EmptyDir, HostPath, Nfs, PVC, Secret
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes
  volumes: 
    - type: Secret
      secretName: jenkins-custom-root-ca-cert
      mountPath: /mnt/ca-certificates/hitesh.com
    - type: PVC
      claimName: pvc-jenkins-maven
      mountPath: /root/.m2
      readOnly: false
    - type: PVC
      claimName: pvc-jenkins-gradle
      mountPath: /root/.gradle
      readOnly: false

  # You can define the workspaceVolume that you want to mount for this container
  # Allowed types are: DynamicPVC, EmptyDir, HostPath, Nfs, PVC
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes/workspace
  workspaceVolume: 
    type: DynamicPVC
    storageClassName: nfs-client-hdd-0
    requestsSize: 1Gi
  #
  # Pod-wide environment, these vars are visible to any container in the agent pod
  envVars: []
  # - name: PATH
  #   value: /usr/local/bin
  # Mount a secret as environment variable
  secretEnvVars: []
  # - key: PATH
  #   optional: false # default: false
  #   secretKey: MY-K8S-PATH
  #   secretName: my-k8s-secret
  nodeSelector: {}
  # Key Value selectors. Ex:
  # jenkins-agent: v1

  # Executed command when side container gets started
  # command:
  # args: "${computer.jnlpmac} ${computer.name}"
  # Side container name
  sideContainerName: jnlp
  # Doesn't allocate pseudo TTY by default
  TTYEnabled: true
  # Max number of spawned agent
  containerCap: 2
  # Pod name
  podName: default
  # Allows the Pod to remain active for reuse until the configured number of
  # minutes has passed since the last step was executed on it.
  idleMinutes: 0
  # Defines how the raw yaml field gets merged with yaml definitions from inherited pod templates: merge or override
  yamlMergeStrategy: merge
  yamlTemplate: |-
    apiVersion: v1
    kind: Pod
    spec:
      containers:
        - name: jnlp
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                    update-ca-certificates"
  # Timeout in seconds for an agent to be online
  connectTimeout: 120
  # Annotations to apply to the pod.
  annotations: {}

  # Below is the implementation of custom pod templates for the default configured kubernetes cloud.
  # Add a key under podTemplates for each pod template. Each key (prior to | character) is just a label, and can be any value.
  # Keys are only used to give the pod template a meaningful name.  The only restriction is they may only contain RFC 1123 \ DNS label
  # characters: lowercase letters, numbers, and hyphens. Each pod template can contain multiple containers.
  # For this pod templates configuration to be loaded the following values must be set:
  # controller.JCasC.defaultConfig: true
  # Best reference is https://<jenkins_url>/configuration-as-code/reference#Cloud-kubernetes. The example below creates a python pod template.
  podTemplates: 
    jdk17-kaniko: |
      - name: jdk17-kaniko
        label: jenkins-jdk17-kaniko
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: 'default jdk17 kaniko'
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: jdk17
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: kaniko
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "mkdir -p /usr/local/share/ca-certificates && 
                          ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt"
    jdk21-kaniko: |
      - name: jdk21-kaniko
        label: jenkins-jdk21-kaniko
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: 'default jdk21 kaniko'
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: jdk21
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: kaniko
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "mkdir -p /usr/local/share/ca-certificates && 
                          ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt"
    node20-kaniko: |
      - name: node20-kaniko
        label: jenkins-node20-kaniko
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: 'default node20 kaniko'
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: node20
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: kaniko
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "mkdir -p /usr/local/share/ca-certificates && 
                          ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt"
    kaniko: |
      - name: kaniko
        label: jenkins-kaniko
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: kaniko
            image: gcr.io/kaniko-project/executor:debug
            command: "/busybox/sh -c"
            args: "cat"
            runAsUser: 0
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1Gi"
        volumes:
          - secretVolume:
              mountPath: /kaniko/.docker/
              secretName: gitea-docker-credentials-secret
              defaultMode: 256
          - hostPathVolume:
              mountPath: /kaniko/ssl/certs/
              hostPath: /etc/ssl/certs/
              readOnly: true
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: kaniko
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "mkdir -p /usr/local/share/ca-certificates && 
                          ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt"
    k8s: |
      - name: k8s
        label: jenkins-k8s
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: k8s
            image: alpine/k8s:1.27.3
            command: "/bin/bash -c"
            args: "cat"
            runAsUser: 0
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1Gi"
        volumes:
          - secretVolume:
              mountPath: /root/.docker/
              secretName: gitea-docker-credentials-secret
              defaultMode: 256
          - secretVolume:
              mountPath: /root/.kube/
              secretName: kube-credentials-secret
              defaultMode: 256
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: k8s
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
    python3: |
      - name: python3
        label: jenkins-python3
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: python3
            image: python:3-alpine
            command: "/bin/sh -c"
            args: "cat"
            runAsUser: 0
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: python3
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
    jdk17: |
      - name: jdk17
        label: jenkins-jdk17
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: jdk17
            image: eclipse-temurin:17-jdk-alpine
            command: "/bin/sh -c"
            args: "cat"
            runAsUser: 0
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: jdk17
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
    jdk21: |
      - name: jdk21
        label: jenkins-jdk21
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: jdk21
            image: eclipse-temurin:21-jdk-alpine
            command: "/bin/sh -c"
            args: "cat"
            runAsUser: 0
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: jdk21
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"  
    node20: |
      - name: node20
        label: jenkins-node20
        serviceAccount: jenkins
        showRawYaml: true
        inheritFrom: default
        containers:
          - name: node20
            image: node:20.10.0-alpine
            command: "/bin/sh -c"
            args: "cat"
            runAsUser: 0
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: jnlp
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"
              - name: node20
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - "/bin/sh"
                        - "-c"
                        - "ln -sf /mnt/ca-certificates/hitesh.com/hitesh.com.root.crt /usr/local/share/ca-certificates/hitesh.com.root.crt && 
                          update-ca-certificates"  
