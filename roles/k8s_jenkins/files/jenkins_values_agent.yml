## volumes permissions :
# 4 -r; 2 - w; x 1
#
# Octal   Decimal   String
# 0777    511       ?rwxrwxrwx
# 0700    448       ?rwx------
# 0644    420       ?rw-r--r--
# 0400    256       ?r--------

agent:
  # -- Enable Kubernetes plugin jnlp-agent podTemplate
  enabled: true
  image:
    # -- Repository to pull the agent jnlp image from
    repository: "hiteshnayak305/inbound-agent"
    # -- Tag of the image to pull
    tag: "3248.v65ecb_254c298-1-alpine"
  # -- Configure working directory for default agent
  workingDir: "/home/jenkins/agent"
  nodeUsageMode: "NORMAL"
  # -- Append Jenkins labels to the agent
  customJenkinsLabels: []
  componentName: "jenkins-agent"
  # -- Enables agent communication via websockets
  websocket: false
  directConnection: false
  # -- Enables the agent to use the host network
  hostNetworking: false
  # -- Resources allocation (Requests and Limits)
  resources:
    requests:
      cpu: "500m"
      memory: "256Mi"
    limits:
      cpu: "1"
      memory: "500Mi"
  # You may want to change this to true while testing a new image
  # -- Always pull agent container image before build
  alwaysPullImage: false
  # Controls how agent pods are retained after the Jenkins build completes
  # Possible values: Always, Never, OnFailure
  podRetention: "OnFailure"
  # Disable if you do not want the Yaml the agent pod template to show up
  # in the job Console Output. This can be helpful for either security reasons
  # or simply to clean up the output to make it easier to read.
  showRawYaml: false

  # You can define the volumes that you want to mount for this container
  # Allowed types are: ConfigMap, EmptyDir, EphemeralVolume, HostPath, Nfs, PVC, Secret
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes
  volumes:
    - type: PVC
      claimName: pvc-jenkins-maven
      mountPath: /root/.m2
      readOnly: false
    - type: PVC
      claimName: pvc-jenkins-sonar-cache-maven
      mountPath: /root/.sonar/cache
      readOnly: false
    - type: PVC
      claimName: pvc-jenkins-gradle
      mountPath: /root/.gradle
      readOnly: false
    - type: PVC
      claimName: pvc-jenkins-npm
      mountPath: /root/.npm
      readOnly: false
    - type: PVC
      claimName: pvc-jenkins-sonar-cache
      mountPath: /opt/sonar-scanner/.sonar/cache
      readOnly: false

  # You can define the workspaceVolume that you want to mount for this container
  # Allowed types are: DynamicPVC, EmptyDir, EphemeralVolume, HostPath, Nfs, PVC
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes/workspace
  workspaceVolume:
    type: PVC
    claimName: pvc-jenkins-workspace
    readOnly: false
  #   type: DynamicPVC
  #   storageClassName: nfs-client-hdd-0
  #   requestsSize: 1Gi
  #
  # Pod-wide environment, these vars are visible to any container in the agent pod
  # -- Environment variables for the agent Pod
  envVars: []
  # - name: PATH
  #   value: /usr/local/bin
  # -- Mount a secret as environment variable
  secretEnvVars: []
  # - key: PATH
  #   optional: false # default: false
  #   secretKey: MY-K8S-PATH
  #   secretName: my-k8s-secret

  # -- Node labels for pod assignment
  nodeSelector: {}
  # Key Value selectors. Ex:
  # nodeSelector
  #   jenkins-agent: v1

  # -- Command to execute when side container starts
  command:
  # -- Arguments passed to command to execute
  args: "${computer.jnlpmac} ${computer.name}"
  # -- Side container name
  sideContainerName: "jnlp"

  # Doesn't allocate pseudo TTY by default
  # -- Allocate pseudo tty to the side container
  TTYEnabled: true
  # -- Max number of agents to launch
  containerCap: 2
  # -- Agent Pod base name
  podName: "default"

  # -- Allows the Pod to remain active for reuse until the configured number of minutes has passed since the last step was executed on it
  idleMinutes: 0
  # -- Defines how the raw yaml field gets merged with yaml definitions from inherited pod templates. Possible values: "merge" or "override"
  yamlMergeStrategy: "merge"
  # -- Controls whether the defined yaml merge strategy will be inherited if another defined pod template is configured to inherit from the current one
  inheritYamlMergeStrategy: false
  # -- Timeout in seconds for an agent to be online
  connectTimeout: 300
  # -- Annotations to apply to the pod
  annotations: {}

  # Below is the implementation of custom pod templates for the default configured kubernetes cloud.
  # Add a key under podTemplates for each pod template. Each key (prior to | character) is just a label, and can be any value.
  # Keys are only used to give the pod template a meaningful name. The only restriction is they may only contain RFC 1123 \ DNS label
  # characters: lowercase letters, numbers, and hyphens. Each pod template can contain multiple containers.
  # For this pod templates configuration to be loaded, the following values must be set:
  # controller.JCasC.defaultConfig: true
  # Best reference is https://<jenkins_url>/configuration-as-code/reference#Cloud-kubernetes. The example below creates a python pod template.
  # -- Configures extra pod templates for the default kubernetes cloud
  podTemplates:
    kaniko: |
      - name: kaniko
        label: jenkins-kaniko
        serviceAccount: jenkins
        showRawYaml: false
        inheritFrom: default
        containers:
          - name: kaniko
            image: hiteshnayak305/kaniko:debug
            command: "/busybox/sh -c"
            args: "cat"
            alwaysPullImage: false
            ttyEnabled: true
            resourceRequestCpu: "1"
            resourceRequestMemory: "500Mi"
            resourceLimitCpu: "2"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
    k8s: |
      - name: k8s
        label: jenkins-k8s
        serviceAccount: jenkins
        showRawYaml: false
        inheritFrom: default
        containers:
          - name: k8s
            image: hiteshnayak305/k8s:1.29.4
            command: "/bin/bash -c"
            args: "cat"
            alwaysPullImage: false
            ttyEnabled: true
            resourceRequestCpu: "1"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "2"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
    jdk21: |
      - name: jdk21
        label: jenkins-jdk21
        serviceAccount: jenkins
        showRawYaml: false
        inheritFrom: default
        containers:
          - name: jdk21
            image: hiteshnayak305/eclipse-temurin:21-jdk-alpine
            command: "/bin/sh -c"
            args: "cat"
            alwaysPullImage: false
            ttyEnabled: true
            resourceRequestCpu: "1"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "2"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
    jdk22: |
      - name: jdk22
        label: jenkins-jdk22
        serviceAccount: jenkins
        showRawYaml: false
        inheritFrom: default
        containers:
          - name: jdk22
            image: hiteshnayak305/eclipse-temurin:22-jdk-alpine
            command: "/bin/sh -c"
            args: "cat"
            alwaysPullImage: false
            ttyEnabled: true
            resourceRequestCpu: "1"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "2"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
    node20: |
      - name: node20
        label: jenkins-node20
        serviceAccount: jenkins
        showRawYaml: false
        inheritFrom: default
        containers:
          - name: node20
            image: hiteshnayak305/node:20-alpine
            command: "/bin/sh -c"
            args: "cat"
            alwaysPullImage: false
            ttyEnabled: true
            resourceRequestCpu: "1"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "2"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
    node22: |
      - name: node22
        label: jenkins-node22
        serviceAccount: jenkins
        showRawYaml: false
        inheritFrom: default
        containers:
          - name: node22
            image: hiteshnayak305/node:22-alpine
            command: "/bin/sh -c"
            args: "cat"
            alwaysPullImage: false
            ttyEnabled: true
            resourceRequestCpu: "1"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "2"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
    ssc5: |
      - name: ssc5
        label: jenkins-ssc5
        serviceAccount: jenkins
        showRawYaml: false
        inheritFrom: default
        containers:
          - name: ssc5
            image: hiteshnayak305/sonar-scanner-cli:5
            command: "/bin/sh -c"
            args: "cat"
            alwaysPullImage: false
            ttyEnabled: true
            resourceRequestCpu: "1"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "2"
            resourceLimitMemory: "1Gi"
        yamlMergeStrategy: merge
