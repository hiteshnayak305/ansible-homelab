agent:
  enabled: true
  image: "jenkins/inbound-agent"
  tag: "latest"
  workingDir: "/home/jenkins/agent"
  nodeUsageMode: "NORMAL"
  customJenkinsLabels: []
  componentName: "jenkins-agent"
  websocket: false
  directConnection: false
  privileged: false
  hostNetworking: false
  resources:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "512m"
      memory: "512Mi"
  # You may want to change this to true while testing a new image
  alwaysPullImage: false
  # Controls how agent pods are retained after the Jenkins build completes
  # Possible values: Always, Never, OnFailure
  podRetention: "Always"
  # Disable if you do not want the Yaml the agent pod template to show up
  # in the job Console Output. This can be helpful for either security reasons
  # or simply to clean up the output to make it easier to read.
  showRawYaml: true
  # You can define the volumes that you want to mount for this container
  # Allowed types are: ConfigMap, EmptyDir, HostPath, Nfs, PVC, Secret
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes
  volumes: 
    - type: HostPath
      hostPath: /etc/ssl/certs
      mountPath: /etc/ssl/certs
      readOnly: true
    - type: PVC
      claimName: pvc-jenkins-maven
      mountPath: /root/.m2
      readOnly: false

  # You can define the workspaceVolume that you want to mount for this container
  # Allowed types are: DynamicPVC, EmptyDir, HostPath, Nfs, PVC
  # Configure the attributes as they appear in the corresponding Java class for that type
  # https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/java/org/csanchez/jenkins/plugins/kubernetes/volumes/workspace
  workspaceVolume: 
    type: DynamicPVC
    storageClassName: nfs-client-hdd-0
    requestsSize: 1Gi
  #
  # Pod-wide environment, these vars are visible to any container in the agent pod
  envVars: []
  # - name: PATH
  #   value: /usr/local/bin
  # Mount a secret as environment variable
  secretEnvVars: []
  # - key: PATH
  #   optional: false # default: false
  #   secretKey: MY-K8S-PATH
  #   secretName: my-k8s-secret
  nodeSelector: {}
  # Key Value selectors. Ex:
  # jenkins-agent: v1

  # Executed command when side container gets started
  command:
  args: "${computer.jnlpmac} ${computer.name}"
  # Side container name
  sideContainerName: "jnlp"
  # Doesn't allocate pseudo TTY by default
  TTYEnabled: false
  # Max number of spawned agent
  containerCap: 10
  # Pod name
  podName: "default"
  # Allows the Pod to remain active for reuse until the configured number of
  # minutes has passed since the last step was executed on it.
  idleMinutes: 10

  # Defines how the raw yaml field gets merged with yaml definitions from inherited pod templates: merge or override
  yamlMergeStrategy: "merge"
  # Timeout in seconds for an agent to be online
  connectTimeout: 100
  # Annotations to apply to the pod.
  annotations: {}

  # Add additional containers to the agents.
  # Containers specified here are added to all agents. Set key empty to remove container from additional agents.
  additionalContainers: []
  #  - sideContainerName: dind
  #    image: docker
  #    tag: dind
  #    command: dockerd-entrypoint.sh
  #    args: ""
  #    privileged: true
  #    resources:
  #      requests:
  #        cpu: 500m
  #        memory: 1Gi
  #      limits:
  #        cpu: 1
  #        memory: 2Gi

  # Below is the implementation of custom pod templates for the default configured kubernetes cloud.
  # Add a key under podTemplates for each pod template. Each key (prior to | character) is just a label, and can be any value.
  # Keys are only used to give the pod template a meaningful name.  The only restriction is they may only contain RFC 1123 \ DNS label
  # characters: lowercase letters, numbers, and hyphens. Each pod template can contain multiple containers.
  # For this pod templates configuration to be loaded the following values must be set:
  # controller.JCasC.defaultConfig: true
  # Best reference is https://<jenkins_url>/configuration-as-code/reference#Cloud-kubernetes. The example below creates a python pod template.
  podTemplates: 
    kaniko: |
      - name: kaniko
        label: jenkins-kaniko
        serviceAccount: jenkins
        showRawYaml: true
        containers:
          - name: kaniko
            image: gcr.io/kaniko-project/executor:debug
            command: "/busybox/sh -c"
            args: "cat"
            runAsUser: 0
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "512Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1024Mi"
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: kaniko
                volumeMounts:
                  - name: gitea-docker-registry-configjson-vol
                    mountPath: "/kaniko/.docker"
                    readOnly: true
                  - name: jenkins-custom-root-ca-cert-vol
                    mountPath: "/kaniko/ssl/certs"
                    readOnly: true
            volumes:
              - name: gitea-docker-registry-configjson-vol
                secret:
                  secretName: jenkins-credentials-secret
                  items:
                    - key: gitea-docker-registry-configjson
                      path: config.json
              - name: jenkins-custom-root-ca-cert-vol
                secret:
                  secretName: jenkins-custom-root-ca-cert
                  items:
                    - key: rootCA.crt
                      path: additional-ca-cert-bundle.crt
    kubectl: |
      - name: kubectl
        label: jenkins-kubectl
        serviceAccount: jenkins
        showRawYaml: true
        containers:
          - name: kubectl
            image: bitnami/kubectl:latest
            command: "/bin/bash -c"
            args: "cat"
            ttyEnabled: true
            resourceRequestCpu: "100m"
            resourceRequestMemory: "256Mi"
            resourceLimitCpu: "300m"
            resourceLimitMemory: "500Mi"
        yamlMergeStrategy: merge
        yaml: |
          apiVersion: v1
          kind: Pod
          spec:
            containers:
              - name: kubectl
                volumeMounts:
                  - name: kubectl-config-secret-vol
                    mountPath: "/.kube"
                    readOnly: true
            volumes:
              - name: kubectl-config-secret-vol
                secret:
                  secretName: jenkins-credentials-secret
                  items:
                    - key: kubectl-config
                      path: config
    python: |
      - name: python
        label: jenkins-python
        serviceAccount: jenkins
        showRawYaml: true
        containers:
          - name: python
            image: python:3
            command: "/bin/sh -c"
            args: "cat"
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "512Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1024Mi"
    jdk17: |
      - name: jdk17
        label: jenkins-jdk17
        serviceAccount: jenkins
        showRawYaml: true
        containers:
          - name: jdk17
            image: eclipse-temurin:17-jdk-alpine
            command: "/bin/sh -c"
            args: "cat"
            ttyEnabled: true
            resourceRequestCpu: "300m"
            resourceRequestMemory: "512Mi"
            resourceLimitCpu: "500m"
            resourceLimitMemory: "1024Mi"