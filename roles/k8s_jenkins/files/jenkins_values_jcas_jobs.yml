controller:
  # Below is the implementation of Jenkins Configuration as Code.  Add a key under configScripts for each configuration area,
  # where each corresponds to a plugin or section of the UI.  Each key (prior to | character) is just a label, and can be any value.
  # Keys are only used to give the section a meaningful name.  The only restriction is they may only contain RFC 1123 \ DNS label
  # characters: lowercase letters, numbers, and hyphens.  The keys become the name of a configuration yaml file on the controller in
  # /var/jenkins_home/casc_configs (by default) and will be processed by the Configuration as Code Plugin.  The lines after each |
  # become the content of the configuration yaml file.  The first line after this is a JCasC root element, eg jenkins, credentials,
  # etc.  Best reference is https://<jenkins_url>/configuration-as-code/reference.  The example below creates a welcome message:
  JCasC:
    configScripts:
      jobs-test: |
        jobs:
          - script: >
              multibranchPipelineJob('test') {
                branchSources {
                  branchSource {
                    source {
                      giteaSCMSource {
                        serverUrl('https://gitea.hitesh.com')
                        credentialsId('gitea-admin')
                        repoOwner('hiteshnayak305')
                        repository('test')
                        id('test')
                        traits {
                          giteaBranchDiscovery {
                            strategyId(3)
                          }
                          giteaTagDiscovery()
                        }
                      }
                    }
                  }
                }
                description('Sample multibranch pipeline using jcas')
                displayName('test')
                orphanedItemStrategy {
                  discardOldItems {
                    daysToKeep(-1)
                    numToKeep(-1)
                  }
                }
              }
      jobs-cas-server: |
        jobs:
          - script: >
              multibranchPipelineJob('cas-server') {
                branchSources {
                  branchSource {
                    source {
                      giteaSCMSource {
                        serverUrl('https://gitea.hitesh.com')
                        credentialsId('gitea-admin')
                        repoOwner('hiteshnayak305')
                        repository('cas-server')
                        id('cas-server')
                        traits {
                          giteaBranchDiscovery {
                            strategyId(3)
                          }
                          giteaTagDiscovery()
                        }
                      }
                    }
                  }
                }
                description('Pipeline to deploy aspero cas server in local k8s')
                displayName('cas-server')
                orphanedItemStrategy {
                  discardOldItems {
                    daysToKeep(-1)
                    numToKeep(-1)
                  }
                }
              }
      jobs-casdoor: |
        jobs:
          - script: >
              multibranchPipelineJob('casdoor') {
                branchSources {
                  branchSource {
                    source {
                      giteaSCMSource {
                        serverUrl('https://gitea.hitesh.com')
                        credentialsId('gitea-admin')
                        repoOwner('hiteshnayak305')
                        repository('casdoor')
                        id('casdoor')
                        traits {
                          giteaBranchDiscovery {
                            strategyId(3)
                          }
                          giteaTagDiscovery()
                        }
                      }
                    }
                  }
                }
                description('Pipeline to deploy casdoor server in local k8s')
                displayName('casdoor')
                orphanedItemStrategy {
                  discardOldItems {
                    daysToKeep(-1)
                    numToKeep(-1)
                  }
                }
              }

#### Informationals
# giteaPullRequestDiscovery {
#   strategyId(1)   0 - head; 1 - merged; 2 both
# }
# giteaForkDiscovery {
#   strategyId(1) 0 - head; 1 - merged; 2 both
#   trust {
#     giteaTrustContributors()
#   }
# }
